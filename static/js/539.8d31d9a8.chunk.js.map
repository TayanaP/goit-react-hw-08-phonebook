{"version":3,"file":"static/js/539.8d31d9a8.chunk.js","mappings":"4OAEaA,EAAOC,EAAAA,EAAAA,KAAH,kQAaJC,EAAQD,EAAAA,EAAAA,MAAH,gJASLE,EAAQF,EAAAA,EAAAA,MAAH,8NAcLG,EAASH,EAAAA,EAAAA,OAAH,uV,SC5BNI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAuBjB,OACE,UAACP,EAAD,CAAMQ,SAtBa,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASC,KAAKC,MAC1BC,SAAUP,EAAKI,SAASG,SAASD,SAGlCE,SACAC,MAAK,SAAAC,GACJC,EAAAA,OAAAA,QAAA,UAAkBD,EAAsBE,KAAKP,KAA7C,kBACD,IACAQ,OAAM,WACLF,EAAAA,OAAAA,QAAe,8BAChB,IAEHX,EAAKc,OACN,EAG+BC,aAAa,MAA3C,WACE,UAACxB,EAAD,oBAEE,SAACC,EAAD,CACEwB,KAAK,OACLX,KAAK,OAELY,MAAM,yIACNC,UAAQ,QAIZ,UAAC3B,EAAD,uBAEE,SAACC,EAAD,CACEwB,KAAK,OACLX,KAAK,WAELY,MAAM,yIACNC,UAAQ,QAIZ,SAACzB,EAAD,CAAQuB,KAAK,SAAb,qBAGL,ECvDD,EAJc,WACZ,OAAO,SAACtB,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  //   min-height: 400px;\n  padding: 40px 20px;\n  width: 400px;\n  background-color: #e4eaef;\n  border-radius: 9px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 10px 20px;\n  color: #000000;\n  background: #efefef;\n  border-radius: 9px;\n  border: 1px solid #efefef;\n\n  :hover,\n  :focus {\n    border: 1px solid #000000;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 600;\n  font-size: 12px;\n  margin-top: 24px;\n  padding: 12px 24px;\n  border-radius: 9px;\n  border: 1px solid #efefef;\n  cursor: pointer;\n  background-color: #bfd0df;\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Notify } from 'notiflix';\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n} from 'components/LoginForm/LoginForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.name.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(`${originalPromiseResult.user.name} welcome back!`);\n      })\n      .catch(() => {\n        Notify.failure('Incorrect login or password');\n      });\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Email\n        <Input\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Password\n        <Input\n          type=\"text\"\n          name=\"password\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\">LogIn</Button>\n    </Form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["Form","styled","Label","Input","Button","LoginForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","name","value","password","unwrap","then","originalPromiseResult","Notify","user","catch","reset","autoComplete","type","title","required"],"sourceRoot":""}